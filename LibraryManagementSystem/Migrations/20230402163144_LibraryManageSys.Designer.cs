// <auto-generated />
using System;
using LibraryManageSys.models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryManagementSystem.Migrations
{
    [DbContext(typeof(LibraryManageSysDbContext))]
    [Migration("20230402163144_LibraryManageSys")]
    partial class LibraryManageSys
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryManageSys.models.LibraryManageSys+Books", b =>
                {
                    b.Property<int>("bookID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("bookID"));

                    b.Property<string>("author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("date_created")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("date_update")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("publication")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("publisher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("quantity")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type_book")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("bookID");

                    b.ToTable("books");
                });

            modelBuilder.Entity("LibraryManageSys.models.LibraryManageSys+BooksRating", b =>
                {
                    b.Property<int>("bookID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ratingID")
                        .HasColumnType("int");

                    b.HasKey("bookID", "ratingID");

                    b.HasIndex("ratingID");

                    b.ToTable("booksratings");
                });

            modelBuilder.Entity("LibraryManageSys.models.LibraryManageSys+BooksUsers", b =>
                {
                    b.Property<int>("bookID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("usersID")
                        .HasColumnType("int");

                    b.HasKey("bookID", "usersID");

                    b.HasIndex("usersID");

                    b.ToTable("booksusers");
                });

            modelBuilder.Entity("LibraryManageSys.models.LibraryManageSys+Borrowings", b =>
                {
                    b.Property<int>("borrowingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("borrowingID"));

                    b.Property<int>("bookID")
                        .HasColumnType("int");

                    b.Property<string>("borrowings_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("date_created")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("date_update")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("due_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("quantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("borrowingID");

                    b.HasIndex("bookID");

                    b.HasIndex("userID");

                    b.ToTable("borrowings");
                });

            modelBuilder.Entity("LibraryManageSys.models.LibraryManageSys+Document", b =>
                {
                    b.Property<int>("documentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("documentID"));

                    b.Property<int>("parentID")
                        .HasColumnType("int");

                    b.Property<int>("parent_type")
                        .HasColumnType("int");

                    b.Property<int>("type_url")
                        .HasColumnType("int");

                    b.Property<int>("url")
                        .HasColumnType("int");

                    b.HasKey("documentID");

                    b.ToTable("documents");
                });

            modelBuilder.Entity("LibraryManageSys.models.LibraryManageSys+Rating", b =>
                {
                    b.Property<int>("ratingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ratingID"));

                    b.Property<int>("bookID")
                        .HasColumnType("int");

                    b.Property<int>("borrowingID")
                        .HasColumnType("int");

                    b.Property<string>("comment_rate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("time_rate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("ratingID");

                    b.ToTable("ratings");
                });

            modelBuilder.Entity("LibraryManageSys.models.LibraryManageSys+RatingBorrowings", b =>
                {
                    b.Property<int>("ratingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("borrowingsID")
                        .HasColumnType("int");

                    b.HasKey("ratingID", "borrowingsID");

                    b.HasIndex("borrowingsID");

                    b.ToTable("ratingborrowings");
                });

            modelBuilder.Entity("LibraryManageSys.models.LibraryManageSys+RatingUsers", b =>
                {
                    b.Property<int>("ratingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("usersID")
                        .HasColumnType("int");

                    b.HasKey("ratingID", "usersID");

                    b.HasIndex("usersID");

                    b.ToTable("ratingusers");
                });

            modelBuilder.Entity("LibraryManageSys.models.LibraryManageSys+Returnings", b =>
                {
                    b.Property<int>("returningID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("returningID"));

                    b.Property<int>("borrowingID")
                        .HasColumnType("int");

                    b.Property<string>("date_created")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("date_update")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lost_book")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("quantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("returning_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.Property<int?>("usersuserID")
                        .HasColumnType("int");

                    b.HasKey("returningID");

                    b.HasIndex("borrowingID");

                    b.HasIndex("usersuserID");

                    b.ToTable("returnings");
                });

            modelBuilder.Entity("LibraryManageSys.models.LibraryManageSys+Users", b =>
                {
                    b.Property<int>("userID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userID"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("access_level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("date_created")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("date_of_birth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("date_update")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userID");

                    b.ToTable("users");
                });

            modelBuilder.Entity("LibraryManageSys.models.LibraryManageSys+BooksRating", b =>
                {
                    b.HasOne("LibraryManageSys.models.LibraryManageSys+Books", "books")
                        .WithMany("booksrating")
                        .HasForeignKey("bookID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryManageSys.models.LibraryManageSys+Rating", "rating")
                        .WithMany("booksratings")
                        .HasForeignKey("ratingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("books");

                    b.Navigation("rating");
                });

            modelBuilder.Entity("LibraryManageSys.models.LibraryManageSys+BooksUsers", b =>
                {
                    b.HasOne("LibraryManageSys.models.LibraryManageSys+Books", "books")
                        .WithMany("booksusers")
                        .HasForeignKey("bookID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryManageSys.models.LibraryManageSys+Users", "users")
                        .WithMany()
                        .HasForeignKey("usersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("books");

                    b.Navigation("users");
                });

            modelBuilder.Entity("LibraryManageSys.models.LibraryManageSys+Borrowings", b =>
                {
                    b.HasOne("LibraryManageSys.models.LibraryManageSys+Books", "books")
                        .WithMany("borrowings")
                        .HasForeignKey("bookID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryManageSys.models.LibraryManageSys+Users", "users")
                        .WithMany("borrowings")
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("books");

                    b.Navigation("users");
                });

            modelBuilder.Entity("LibraryManageSys.models.LibraryManageSys+RatingBorrowings", b =>
                {
                    b.HasOne("LibraryManageSys.models.LibraryManageSys+Borrowings", "borrowings")
                        .WithMany()
                        .HasForeignKey("borrowingsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryManageSys.models.LibraryManageSys+Rating", "rating")
                        .WithMany()
                        .HasForeignKey("ratingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("borrowings");

                    b.Navigation("rating");
                });

            modelBuilder.Entity("LibraryManageSys.models.LibraryManageSys+RatingUsers", b =>
                {
                    b.HasOne("LibraryManageSys.models.LibraryManageSys+Rating", "rating")
                        .WithMany("ratingusers")
                        .HasForeignKey("ratingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryManageSys.models.LibraryManageSys+Users", "users")
                        .WithMany("ratingusers")
                        .HasForeignKey("usersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("rating");

                    b.Navigation("users");
                });

            modelBuilder.Entity("LibraryManageSys.models.LibraryManageSys+Returnings", b =>
                {
                    b.HasOne("LibraryManageSys.models.LibraryManageSys+Borrowings", "borrowings")
                        .WithMany("returnings")
                        .HasForeignKey("borrowingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryManageSys.models.LibraryManageSys+Users", "users")
                        .WithMany("returnings")
                        .HasForeignKey("usersuserID");

                    b.Navigation("borrowings");

                    b.Navigation("users");
                });

            modelBuilder.Entity("LibraryManageSys.models.LibraryManageSys+Books", b =>
                {
                    b.Navigation("booksrating");

                    b.Navigation("booksusers");

                    b.Navigation("borrowings");
                });

            modelBuilder.Entity("LibraryManageSys.models.LibraryManageSys+Borrowings", b =>
                {
                    b.Navigation("returnings");
                });

            modelBuilder.Entity("LibraryManageSys.models.LibraryManageSys+Rating", b =>
                {
                    b.Navigation("booksratings");

                    b.Navigation("ratingusers");
                });

            modelBuilder.Entity("LibraryManageSys.models.LibraryManageSys+Users", b =>
                {
                    b.Navigation("borrowings");

                    b.Navigation("ratingusers");

                    b.Navigation("returnings");
                });
#pragma warning restore 612, 618
        }
    }
}
